<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="test" name="lucene.hebrew">
    
    <property environment="env"/>
    
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <property name="build.dir" value="build/${ant.project.name}" />
    <property name="dist.dir" value="build/distribution" />
    <property name="testbuild.dir" value="build/${ant.project.name}_test" />
    <property name="hebmorph.build.dir" value="../hebmorph/build/hebmorph"/>
    <!--<property name="lucene-version" value="2.9.3" />-->
    <property name="lucene-version" value="3.0.2" />
       
    <path id="lucene.classpath">
        <pathelement location="lib/lucene-analyzers-${lucene-version}.jar"/>
        <pathelement location="lib/lucene-core-${lucene-version}.jar"/>
        <pathelement location="lib/lucene-queries-${lucene-version}.jar"/>
    </path>
    
     <path id="test.classpath">
        <pathelement location="${testbuild.dir}" />
        <pathelement location="${dist.dir}/${ant.project.name}.jar"/>
        <pathelement location="lib/junit.jar"/>
        <path refid="lucene.classpath"/>
     </path>
  
    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${testbuild.dir}"/>
        <copy includeemptydirs="false" todir="${build.dir}">
            <fileset dir="src" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="${testbuild.dir}">
            <fileset dir="test" excludes="**/*.launch, **/*.java"/>
        </copy>
    </target>
    
    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete file="${dist.dir}"/>
        <delete dir="${testbuild.dir}"/>
    </target>
    
    <target depends="clean" name="cleanall"/>
    <target depends="cleanall,build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" encoding="UTF-8" debuglevel="${debuglevel}" destdir="${build.dir}" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="lucene.classpath"/>
            <classpath location="${hebmorph.build.dir}"/>
        </javac>
    </target>
    
   <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target name="jar" depends="build">
        <jar destfile="${dist.dir}/${ant.project.name}.jar"
           basedir="${build.dir}"
           includes="**/*.class">
           
        <zipfileset dir="../../hspell-data-files" prefix="hspell-data-files">
               <include name="**/*"/>
        </zipfileset>
        <zipfileset dir="${hebmorph.build.dir}" >
               <include name="**/*.class"/>
        </zipfileset>
      </jar>
    </target>	
 
    <target name="test" depends="jar">
          <javac debug="true" encoding="UTF-8" debuglevel="${debuglevel}" destdir="${testbuild.dir}" source="${source}" target="${target}">
              <src path="test"/>
              <classpath refid="test.classpath"/>
          </javac>
          
        <junit failureproperty="junit.tests.failed" forkmode="perTest" printsummary="yes" haltonfailure="false" haltonerror="false" showoutput="true">

          <jvmarg value="-Dfile.encoding=UTF-8"/>
          
          <classpath refid="test.classpath" />

          <formatter type="plain" usefile="false" /> 
          <batchtest>
            <fileset dir="${testbuild.dir}" includes="**/RegressionTestSuite.class" />
          </batchtest>
          
        </junit>
        <fail if="junit.tests.failed" message="JUnit tests failed. exiting..." /> 
        
    </target>

</project>
